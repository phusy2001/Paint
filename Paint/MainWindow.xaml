<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Paint"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
        xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml" x:Class="Paint.MainWindow"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="MainWindow" WindowState="Maximized" Loaded="Window_Loaded">
    <DockPanel LastChildFill="True">
        <StackPanel x:Name="actionsStackPanel" Orientation="Horizontal" HorizontalAlignment="Center" Height="50" DockPanel.Dock="Top">
            <ToolBarTray >
                <ToolBar
                    Style="{StaticResource MaterialDesignToolBar}"
                    ClipToBounds="False">
                    <Menu IsMainMenu="True" Height="48">
                        <MenuItem Header="_File">
                            <MenuItem Header="Save" Icon="{materialDesign:PackIcon Kind=ContentSave}" Click="BtnSave_Click"/>
                            <MenuItem Header="Exit" InputGestureText="Ctrl+E" Icon="{materialDesign:PackIcon Kind=ExitToApp}" Click="BtnExit_Click"/>
                            <Separator />
                            <MenuItem Header="Import background" IsCheckable="False" Click="BtnImport_Click"/>
                            <MenuItem Header="Export picture" IsCheckable="False" Click="BtnExport_Click"/>
                        </MenuItem>
                    </Menu>
                    <Separator />
                    <ListBox x:Name="Select">
                        <ListBoxItem Content="{materialDesign:PackIcon Kind=Select}"/>
                    </ListBox>
                    <Separator />
                    <!--<ListBox x:Name="Affine">
                        <ListBoxItem Content="{materialDesign:PackIcon Kind=MagnifyPlusOutline}" />
                        <ListBoxItem Content="{materialDesign:PackIcon Kind=RotateRight}" />
                        <ListBoxItem Content="{materialDesign:PackIcon Kind=ContentCopy}" />
                    </ListBox>
                    <Separator />-->
                    <WrapPanel>
                        <Button
                            Click="Undo_Click"
                            Margin="0,5,5,0"
                            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            ToolTip="MaterialDesignFloatingActionMiniLightButton"
                            IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                            <materialDesign:PackIcon Kind="Restore" />
                        </Button>
                        <Button
                            Click="Redo_Click"
                            Margin="0,5,5,0"
                            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            ToolTip="MaterialDesignFloatingActionMiniLightButton"
                            IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                            <materialDesign:PackIcon Kind="Reload" />
                        </Button>
                    </WrapPanel>
                    <Separator />
                    <colorpicker:PortableColorPicker 
                        SmallChange="5"
                        Margin="20, 0, 20, 0" 
                        UseHintColor="True" 
                        HintColor="Transparent" 
                        ColorState="{Binding ElementName=maindisplay, Path=ColorState, Mode=TwoWay, Delay=10}" 
                        SecondColorState="{Binding ElementName=maindisplay, Path=SecondColorState, Mode=TwoWay}"  
                        Width="40" Height="40" 
                        ColorChanged="PortableColorPicker_ColorChanged" 
                        x:Name="ColorPicker"/>
                    <TextBlock x:Name="curColor" Margin="0, 20, 20, 0" Text="#FFF000000"></TextBlock>
                    <StackPanel Margin="0,0,20,0">
                        <Label x:Name="ThicknessLb" Content="Thickness"/>
                        <Slider Name="ThicknessSlider" Minimum="1" Maximum="5"/>
                    </StackPanel>
                    <StackPanel Margin="0,10,20,0">
                        <ComboBox
                                x:Name="StrokeType"
                                materialDesign:ComboBoxAssist.ClassicMode="{Binding ElementName=ClassicModeCheckBox, Path=IsChecked}">
                            <ComboBoxItem IsSelected="True" Content="Dash"/>
                            <ComboBoxItem Content="Dot" />
                            <ComboBoxItem Content="Dash dot" />
                        </ComboBox>
                    </StackPanel>
                    <Separator />
                    <Button x:Name="DeleteAllbtn" Content="Clear all" FontWeight="Normal" Click="DeleteAllbtn_Click"/>
                    <Separator />
                    <Button Content="Select" Name="moveBtn" Click="moveBtn_Click"></Button>
                </ToolBar>
            </ToolBarTray>
            
        </StackPanel>
       
        <Grid>
            <Canvas x:Name="canvas" Background="Gray" Focusable="False"/>
            <Border x:Name="border" Background="Transparent" MouseDown="Border_MouseDown" MouseMove="Border_MouseMove" MouseUp="Border_MouseUp" MouseWheel="border_MouseWheel" />
        </Grid>
    </DockPanel>
</Window>
